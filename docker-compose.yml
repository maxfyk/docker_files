version: '3'

services:
  database:
    image: ivonet/mysql
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    ports:
      - "13306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASS}
      MYSQL_ROOT_HOST: '%'
    networks:
      - network
  redis:
    image: redis
    depends_on:
      - database
    networks:
      - network

  parer:
    build: ../parer
    env_file:
      - .env
    command: python3 parer.py
    depends_on:
      - redis
    networks:
      - network

  parer_api:
    build: ../parer_api
    env_file:
      - .env
    ports:
      - "5000:5000"
    command: gunicorn --workers ${API_WORKERS} --bind 0.0.0.0:5000 --timeout 120 wsgi:app
    stdin_open: true
    volumes:
      - ./methods/:/usr/src/app/methods/
    tty: true
    depends_on:
      - redis
    networks:
      - network
  parer:
    build: ../parer
    env_file:
      - .env
    command: python3 parer.py
    stdin_open: true
    tty: true
    volumes:
      - ./methods/:/usr/src/app/methods/
    depends_on:
      - redis
    networks:
      - network

  get_tasks:
    build: ../get_tasks
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./methods/:/usr/src/app/methods/
    command: python3 get_tasks.py runworker
    networks:
      - network

  get_channels:
    build: ../get_channels
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - ./methods/:/usr/src/app/methods/
    command: python3 get_channels.py runworker
    networks:
      - network

  dashboard:
    build: ../rq_dashboard
    ports:
      - "9181:9181"
    command: rq-dashboard -H redis
    depends_on:
      - parer
    networks:
      - network

networks:
  network: {}
